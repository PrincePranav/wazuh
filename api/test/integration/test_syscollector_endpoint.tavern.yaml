---
test_name: GET /syscollector/{agent_id}/os

includes:
  - !include common.yaml

stages:
  - type: ref
    id: login_get_token
  - name: Get the OS of an agent

    request: &os_request
      method: GET
      url: "{protocol:s}://{host:s}:{port:d}/syscollector/000/os"
      headers:
        Authorization: "Bearer {test_login_token}"

    response:
      status_code: 200
      body:
        data:
          architecture: !anystr
          hostname: !anystr
          os:
            codename: !anystr
            major: !anystr
            minor: !anystr
            name: !anystr
            platform: !anystr
            version: !anystr
          release: !anystr
          scan:
            id: !anyint
            time: !anystr
          sysname: !anystr
          version: !anystr
      save:
        body:
          os_version: data.os.version
          release: data.release
          sysname: data.sysname

  - name: Filter select

    request:
      <<: *os_request
      params:
        select: os_version,sysname,release

    response:
      status_code: 200
      body:
        data:
          os_version: "{os_version}"
          release: "{release}"
          sysname: "{sysname}"

  - name: Invalid selector

    request:
      <<: *os_request
      params:
        select: wrongParam

    response: &error_response
      status_code: 400
      body:
        code: !anyint
        dapi_errors:
          master-node:
            error: !anystr
        detail: !anystr
        remediation: !anystr
        status: !anyint
        title: !anystr
        type: !anystr

---
test_name: GET /syscollector/{agent_id}/os

includes:
  - !include common.yaml

stages:
  - type: ref
    id: login_get_token
  - name: Hardware of an agent

    request: &hardware_request
      url: "{protocol:s}://{host:s}:{port:d}/syscollector/000/hardware"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET

    response:
      status_code: 200
      body:
        data:
          board_serial: !anything
          cpu:
            cores: !anything
            mhz: !anything
            name: !anything
          ram:
            free: !anything
            total: !anything
            usage: !anything
          scan:
            id: !anything
            time: !anything
      save:
        body:
          board_serial: data.board_serial
          cpu_name: data.cpu.name
          ram_total: data.ram.total

  - name: Filter select

    request:
      <<: *hardware_request
      params:
        select: ram_free,board_serial,cpu_name,ram_total

    response:
      status_code: 200
      body:
        data:
          board_serial: "{board_serial}"
          cpu_name: "{cpu_name}"
          ram:
            free: !anything
            total: !int "{ram_total}"

  - name: Not allowed selector

    request:
      <<: *hardware_request
      params:
        select: wrongParam

    response:
      <<: *error_response

---
test_name: GET /syscollector/{agent_id}/packages

includes:
  - !include common.yaml

stages:
  - type: ref
    id: login_get_token
  - name: Packages of an agent, no limit

    request: &packages_request
      url: "{protocol:s}://{host:s}:{port:d}/syscollector/000/packages"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET

    response:
      status_code: 200
      body:
        data:
          totalItems: !anyint

  - name: Packages of and agent

    request:
      <<: *packages_request
      params:
        limit: 1

    response:
      status_code: 200
      body:
        data:
          items: &packages_response
            -
              architecture: !anystr
              description: !anystr
              format: !anystr
              name: !anystr
              priority: !anystr
              scan:
                id: !anyint
                time: !anystr
              section: !anystr
              size: !anyint
              vendor: !anystr
              version: !anystr
      save:
        body:
          scan_id: data.items.0.scan.id
          description: data.items.0.description
          architecture: data.items.0.architecture


  - name: Multiple selectors

    request:
      <<: *packages_request
      params:
        select: scan_id,description,architecture

    response:
      status_code: 200
      body:
        data:
          totalItems: !anyint

  - name: Multiple selectors with limit

    request:
      <<: *packages_request
      params:
        select: scan_id,description,architecture
        limit: 1

    response:
      status_code: 200
      body:
        data:
          items:
            -
              architecture: "{architecture}"
              description: "{description}"
              scan_id: !int "{scan_id}"

  - name: Not allowed selector

    request:
      <<: *packages_request
      params:
        select: wrongParam

    response:
      <<: *error_response

  - name: Limit and offset

    request:
      <<: *packages_request
      params:
        offset: 0
        limit: 2

    response:
      status_code: 200
      body:
        data:
          items:
            - <<: *packages_response
            - <<: *packages_response
      save:
        body:
          offset_test: data.items.1

  - name: Limit and offset test

    request:
      <<: *packages_request
      params:
        offset: 1
        limit: 2

    response:
      status_code: 200
      body:
        data:
          items:
            - architecture: "{offset_test.architecture}"
              description: "{offset_test.description}"
              format: "{offset_test.format}"
              name: "{offset_test.name}"
              priority: "{offset_test.priority}"
              scan:
                id: !int "{offset_test.scan.id}"
                time: "{offset_test.scan.time}"
              section: "{offset_test.section}"
              size: !int "{offset_test.size}"
              vendor: "{offset_test.vendor}"
              version: "{offset_test.version}"
            - <<: *packages_response
      save:
        body:
          expected_name: data.items.0.name
          expected_vendor: data.items.0.vendor

  - name: Wrong limit

    request:
      <<: *packages_request
      params:
        offset: 0
        limit: 1a

    response:
      status_code: 400
      body: &bad_request
        detail: !anystr
        status: 400
        title: "Bad Request"
        type: "about:blank"

  - name: Invalid limit

    request:
      <<: *packages_request
      params:
        offset: 0
        limit: 0

    response:
      status_code: 400
      body:
        <<: *bad_request

  - name: Filter sort

    request:
      <<: *packages_request
      params:
        sort: -name
        limit: 2

    response:
      status_code: 200
      body:
        data:
          items:
            - <<: *packages_response
            - <<: *packages_response

  - name: Filter sort 2

    request:
      <<: *packages_request
      params:
        sort: name
        limit: 2

    response:
      status_code: 200
      body:
        data:
          items:
            - <<: *packages_response
            - <<: *packages_response

  - name: Wrong sort

    request:
      <<: *packages_request
      params:
        sort: wronParam

    response:
      status_code: 400
      body: &error_remediation_response
        code: !anyint
        dapi_errors:
          master-node:
            error: !anystr
        detail: !anystr
        remediation: !anystr
        status: !anyint
        title: !anystr
        type: !anystr

  - name: Get with limit

    request:
      <<: *packages_request
      params:
        limit: 1

    response:
      status_code: 200
      body:
        data:
          items:
            - <<: *packages_response

  - name: Search an expected name

    request:
      <<: *packages_request
      params:
        search: "{expected_name}"

    response:
      status_code: 200
      body:
        data:
          items:
            - <<: *packages_response

  - name: Search an expected vendor

    request:
      <<: *packages_request
      params:
        search: ubuntu
        limit: 1

    response:
      status_code: 200
      body:
        data:
          items:
            - <<: *packages_response

# We can't test this cause -> https://github.com/wazuh/wazuh/issues/3184
#  - name: Filter by vendor
#
#    request:
#      <<: *packages_request
#      params:
#        vendor: "Ubuntu Core"
#        limit: 1
#
#    response:
#      status_code: 200
#      body:
#        data:
#          items:
#            - <<: *packages_response

  - name: Search an expected name

    request:
      <<: *packages_request
      params:
        name: "binutils"
        limit: 1

    response:
      status_code: 200
      body:
        data:
          items:
            - <<: *packages_response
      save:
        body:
          name: data.items.0.name

  - name: Filter by name

    request:
      <<: *packages_request
      params:
        name: "{name}"
        limit: 1

    response:
      status_code: 200
      body:
        data:
          items:
            - <<: *packages_response
      save:
        body:
          architecture: data.items.0.architecture

  - name: Filter by architecture

    request:
      <<: *packages_request
      params:
        architecture: "{architecture}"
        limit: 1

    response:
      status_code: 200
      body:
        data:
          items:
            - <<: *packages_response
      save:
        body:
          format: data.items.0.format

  - name: Filter by format

    request:
      <<: *packages_request
      params:
        format: "{format}"
        limit: 1

    response:
      status_code: 200
      body:
        data:
          items:
            - <<: *packages_response

  - name: Wrong filter

    request:
      <<: *packages_request
      params:
        format: "{format}"
        limit: 1

    response:
      status_code: 200
      body:
        data:
          items:
            - <<: *packages_response

---
test_name: GET /syscollector/{agent_id}/processes

includes:
  - !include common.yaml

stages:
  - type: ref
    id: login_get_token
  - name: Processes of an agent, no limit

    request: &processes_request
      url: "{protocol:s}://{host:s}:{port:d}/syscollector/000/processes"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET

    response:
      status_code: 200
      body:
        data:
          totalItems: !anyint

  - name: Processes of an agent with limit = 1

    request:
      <<: *processes_request
      params:
        limit: 1

    response:
      status_code: 200
      body:
        data:
          items: &processes_response
            - argvs: !anystr
              cmd: !anystr
              egroup: !anystr
              euser: !anystr
              fgroup: !anystr
              name: !anystr
              nice: !anyint
              nlwp: !anyint
              pgrp: !anyint
              pid: !anystr
              ppid: !anyint
              priority: !anyint
              processor: !anyint
              resident: !anyint
              rgroup: !anystr
              ruser: !anystr
              scan:
                id: !anyint
                time: !anystr
              session: !anyint
              sgroup: !anystr
              share: !anyint
              size: !anyint
              start_time: !anyint
              state: !anystr
              stime: !anyint
              suser: !anystr
              tgid: !anyint
              tty: !anyint
              utime: !anyint
              vm_size: !anyint
      save:
        body:
          tty: data.items.0.tty
          sgroup: data.items.0.sgroup
          share: data.items.0.share
          session: data.items.0.session
          scan_id: data.items.0.scan.id

  - name: Select by

    request:
      <<: *processes_request
      params:
        select: tty,sgroup,share,session,scan_id
        limit: 1

    response:
      status_code: 200
      body:
        data:
          items:
            - scan_id: !int "{scan_id}"
              session: !int "{session}"
              sgroup: "{sgroup}"
              share: !int "{share}"
              tty: !int "{tty}"

  - name: Wrong param

    request:
      <<: *processes_request
      params:
        select: wrongParam

    response:
      status_code: 400
      body:
        <<: *error_remediation_response

  - name: offset and limit

    request:
      <<: *processes_request
      params:
        offset: 0
        limit: 2

    response:
      status_code: 200
      body:
        data:
          items:
            - <<: *processes_response
            - <<: *processes_response
      save:
        body:
          offset_test: data.items.1

  - name: offset and limit check

    request:
      <<: *processes_request
      params:
        offset: 1
        limit: 2

    response:
      status_code: 200
      body:
        data:
          items:
            - argvs: "{offset_test.argvs}"
              cmd: "{offset_test.cmd}"
              egroup: "{offset_test.egroup}"
              euser: "{offset_test.euser}"
              fgroup: "{offset_test.fgroup}"
              name: "{offset_test.name}"
              nice: !int "{offset_test.nice}"
              nlwp: !int "{offset_test.nlwp}"
              pgrp: !int "{offset_test.pgrp}"
              pid: "{offset_test.pid}"
              ppid: !int "{offset_test.ppid}"
              priority: !int "{offset_test.priority}"
              processor: !int "{offset_test.processor}"
              resident: !int "{offset_test.resident}"
              rgroup: "{offset_test.rgroup}"
              ruser: "{offset_test.ruser}"
              scan:
                id: !int "{offset_test.scan.id}"
                time: "{offset_test.scan.time}"
              session: !int "{offset_test.session}"
              sgroup: "{offset_test.sgroup}"
              share: !int "{offset_test.share}"
              size: !int "{offset_test.size}"
              start_time: !int "{offset_test.start_time}"
              state: "{offset_test.state}"
              stime: !int "{offset_test.stime}"
              suser: "{offset_test.suser}"
              tgid: !int "{offset_test.tgid}"
              tty: !int "{offset_test.tty}"
              utime: !int "{offset_test.utime}"
              vm_size: !int "{offset_test.vm_size}"
            - <<: *processes_response

  - name: Wrong limit

    request:
      <<: *processes_request
      params:
        limit: 0

    response:
      status_code: 400
      body: &error_spec
        detail: !anystr
        status: !anyint
        title: !anystr
        type: !anystr

---
test_name: GET /syscollector/{agent_id}/processes/{search, sort, select}

marks:
  - parametrize:
      key: field
      vals:
        - argvs
        - cmd
        - egroup
        - euser
        - fgroup
        - name
        - nice
        - nlwp
        - pgrp
        - pid
        - ppid
        - priority
        - processor
        - resident
        - rgroup
        - ruser
        - scan_id
        - session
        - sgroup
        - share
        - size
        - start_time
        - state
        - stime
        - suser
        - tgid
        - tty
        - utime
        - vm_size

includes:
  - !include common.yaml

stages:
  - type: ref
    id: login_get_token
  - name: Processes of an agent, sort

    request:
      <<: *processes_request
      params:
        sort: "{field}"

    response:
      status_code: 200
      body:
        data:
          - <<: *processes_response

---