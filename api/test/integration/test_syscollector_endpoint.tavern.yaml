---
test_name: GET /syscollector/{agent_id}/os

includes:
  - !include common.yaml

stages:
  - type: ref
    id: login_get_token
  - name: Get the OS of an agent

    request: &os_request
      method: GET
      url: "{protocol:s}://{host:s}:{port:d}/syscollector/000/os"
      headers:
        Authorization: "Bearer {test_login_token}"

    response:
      status_code: 200
      body:
        data:
          architecture: !anystr
          hostname: !anystr
          os:
            codename: !anystr
            major: !anystr
            minor: !anystr
            name: !anystr
            platform: !anystr
            version: !anystr
          release: !anystr
          scan:
            id: !anyint
            time: !anystr
          sysname: !anystr
          version: !anystr
      save:
        body:
          os_version: data.os.version
          release: data.release
          sysname: data.sysname

  - name: Filter select

    request:
      <<: *os_request
      params:
        select: os_version,sysname,release

    response:
      status_code: 200
      body:
        data:
          os_version: "{os_version}"
          release: "{release}"
          sysname: "{sysname}"

  - name: Invalid selector

    request:
      <<: *os_request
      params:
        select: wrongParam

    response: &error_response
      status_code: 400
      body:
        code: !anyint
        dapi_errors:
          master-node:
            error: !anystr
        detail: !anystr
        remediation: !anystr
        status: !anyint
        title: !anystr
        type: !anystr

---
test_name: GET /syscollector/{agent_id}/os

includes:
  - !include common.yaml

stages:
  - type: ref
    id: login_get_token
  - name: Hardware of an agent

    request: &hardware_request
      url: "{protocol:s}://{host:s}:{port:d}/syscollector/000/hardware"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET

    response:
      status_code: 200
      body:
        data:
          board_serial: !anything
          cpu:
            cores: !anything
            mhz: !anything
            name: !anything
          ram:
            free: !anything
            total: !anything
            usage: !anything
          scan:
            id: !anything
            time: !anything
      save:
        body:
          board_serial: data.board_serial
          cpu_name: data.cpu.name
          ram_total: data.ram.total

  - name: Filter select

    request:
      <<: *hardware_request
      params:
        select: ram_free,board_serial,cpu_name,ram_total

    response:
      status_code: 200
      body:
        data:
          board_serial: "{board_serial}"
          cpu_name: "{cpu_name}"
          ram:
            free: !anything
            total: !int "{ram_total}"

  - name: Not allowed selector

    request:
      <<: *hardware_request
      params:
        select: wrongParam

    response:
      <<: *error_response

---
test_name: GET /syscollector/{agent_id}/packages

includes:
  - !include common.yaml

stages:
  - type: ref
    id: login_get_token
  - name: Packages of an agent, no limit

    request: &packages_request
      url: "{protocol:s}://{host:s}:{port:d}/syscollector/000/packages"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET

    response:
      status_code: 200
      body:
        data:
          totalItems: !anyint

  - name: Packages of and agent

    request:
      <<: *packages_request
      params:
        limit: 1

    response:
      status_code: 200
      body:
        data:
          items: &packages_response
            -
              architecture: !anystr
              description: !anystr
              format: !anystr
              name: !anystr
              priority: !anystr
              scan:
                id: !anyint
                time: !anystr
              section: !anystr
              size: !anyint
              vendor: !anystr
              version: !anystr
      save:
        body:
          scan_id: data.items.0.scan.id
          description: data.items.0.description
          architecture: data.items.0.architecture


  - name: Multiple selectors

    request:
      <<: *packages_request
      params:
        select: scan_id,description,architecture

    response:
      status_code: 200
      body:
        data:
          totalItems: !anyint

  - name: Multiple selectors with limit

    request:
      <<: *packages_request
      params:
        select: scan_id,description,architecture
        limit: 1

    response:
      status_code: 200
      body:
        data:
          items:
            -
              architecture: "{architecture}"
              description: "{description}"
              scan_id: !int "{scan_id}"

  - name: Not allowed selector

    request:
      <<: *packages_request
      params:
        select: wrongParam

    response:
      <<: *error_response

  - name: Limit and offset

    request:
      <<: *packages_request
      params:
        offset: 0
        limit: 2

    response:
      status_code: 200
      body:
        data:
          items:
            - <<: *packages_response
            - <<: *packages_response
      save:
        body:
          sort_response: data.items.1

  - name: Limit and offset test

    request:
      <<: *packages_request
      params:
        offset: 1
        limit: 2

    response:
      status_code: 200
      body:
        data:
          items:
            - architecture: "{sort_response.architecture}"
              description: "{sort_response.description}"
              format: "{sort_response.format}"
              name: "{sort_response.name}"
              priority: "{sort_response.priority}"
              scan:
                id: !int "{sort_response.scan.id}"
                time: "{sort_response.scan.time}"
              section: "{sort_response.section}"
              size: !int "{sort_response.size}"
              vendor: "{sort_response.vendor}"
              version: "{sort_response.version}"
            - <<: *packages_response
      save:
        body:
          expected_name: data.items.0.name
          expected_vendor: data.items.0.vendor

  - name: Wrong limit

    request:
      <<: *packages_request
      params:
        offset: 0
        limit: 1a

    response:
      status_code: 400
      body: &bad_request
        detail: !anystr
        status: 400
        title: "Bad Request"
        type: "about:blank"

  - name: Invalid limit

    request:
      <<: *packages_request
      params:
        offset: 0
        limit: 0

    response:
      status_code: 400
      body:
        <<: *bad_request

  - name: Filter sort

    request:
      <<: *packages_request
      params:
        sort: -name
        limit: 2

    response:
      status_code: 200
      body:
        data:
          items:
            - <<: *packages_response
            - <<: *packages_response

  - name: Filter sort 2

    request:
      <<: *packages_request
      params:
        sort: name
        limit: 2

    response:
      status_code: 200
      body:
        data:
          items:
            - <<: *packages_response
            - <<: *packages_response

  - name: Wrong sort

    request:
      <<: *packages_request
      params:
        sort: wronParam

    response:
      status_code: 400
      body: &error_remediation_response
        code: !anyint
        dapi_errors:
          master-node:
            error: !anystr
        detail: !anystr
        remediation: !anystr
        status: !anyint
        title: !anystr
        type: !anystr

  - name: Get with limit

    request:
      <<: *packages_request
      params:
        limit: 1

    response:
      status_code: 200
      body:
        data:
          items:
            - <<: *packages_response

  - name: Search an expected name

    request:
      <<: *packages_request
      params:
        search: "{expected_name}"

    response:
      status_code: 200
      body:
        data:
          items:
            - <<: *packages_response

  - name: Search an expected vendor

    request:
      <<: *packages_request
      params:
        search: ubuntu
        limit: 1

    response:
      status_code: 200
      body:
        data:
          items:
            - <<: *packages_response
# Wait for frontend response
#  - name: Filter by vendor
#
#    request:
#      <<: *packages_request
#      params:
#        vendor: "Ubuntu Core"
#        limit: 1
#
#    response:
#      status_code: 200
#      body:
#        data:
#          items:
#            - <<: *packages_response
  - name: Search an expected name

    request:
      <<: *packages_request
      params:
        name: "binutils"
        limit: 1

    response:
      status_code: 200
      body:
        data:
          items:
            - <<: *packages_response
    save:
      body:
        name: data.items.0.name

  - name: Filter by name

    request:
      <<: *packages_request
      params:
        name: "{name}"
        limit: 1

    response:
      status_code: 200
      body:
        data:
          items:
            - <<: *packages_response
    save:
      body:
        architecture: data.items.0.architecture

  - name:

    request:
      <<: *packages_request
      params:
        architecture: "{architecture}"
        limit: 1

    response:
      status_code: 200
      body:
        data:
          items:
            - <<: *packages_response

---