---
test_name: GET /syscollector/{agent_id}/os

includes:
  - !include common.yaml

stages:
  - type: ref
    id: login_get_token
  - name: Get the OS of an agent

    request:
      method: GET
      url: "{protocol:s}://{host:s}:{port:d}/syscollector/000/os"
      headers:
        Authorization: "Bearer {test_login_token}"

    response:
      status_code: 200
      body:
        architecture: !anystr
        hostname: !anystr
        os:
          codename: !anystr
          major: !anystr
          minor: !anystr
          name: !anystr
          platform: !anystr
          version: !anystr
        release: !anystr
        scan:
          id: !anyint
          time: !anystr
        sysname: !anystr
        version: !anystr

  - name: Filter select

    request:
      url: "{protocol:s}://{host:s}:{port:d}/syscollector/000/os"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
      params:
        select: os_version,sysname,release

    response:
      status_code: 200
      body:
        os_version: !anystr
        release: !anystr
        sysname: !anystr

  - name: Invalid selector

    request:
      url: "{protocol:s}://{host:s}:{port:d}/syscollector/000/os"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
      params:
        select: wrongParam

    response:
      status_code: 400
      body:
        code: 1724
        dapi_errors:
          master-node:
            error: "Not a valid select field"
        detail: "Not a valid select field"
        remediation: "The valid fields are: board_serial, cpu_name, cpu_cores, cpu_mhz, ram_total, ram_free, ram_usage, scan_id, scan_time"
        status: 400
        title: "Wazuh Error"
        type: "about:blank"

---
test_name: GET /syscollector/{agent_id}/os

includes:
  - !include common.yaml

stages:
  - type: ref
    id: login_get_token
  - name: Hardware of an agent

    request:
      url: "{protocol:s}://{host:s}:{port:d}/syscollector/000/hardware"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET

    response:
      status_code: 200
      body:
        board_serial: !anything
        cpu:
          cores: !anything
          mhz: !anything
          name: !anything
        ram:
          free: !anything
          total: !anything
          usage: !anything
        scan:
          id: !anything
          time: !anything

  - name: Filter select

    request:
      url: "{protocol:s}://{host:s}:{port:d}/syscollector/000/hardware"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
      params:
        select: ram_free,board_serial,cpu_name,ram_total

    response:
      status_code: 200
      body:
        board_serial: !anything
        cpu_name: !anything
        ram:
          free: !anything
          total: !anything

  - name: Not allowed selector

    request:
      url: "{protocol:s}://{host:s}:{port:d}/syscollector/000/hardware"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
      params:
        select: wrongParam

    response:
      status_code: 400
      body:
        code: 1724
        dapi_errors:
          master-node:
            error: "Not a valid select field"
        detail: "Not a valid select field"
        remediation: "The valid fields are: board_serial, cpu_name, cpu_cores, cpu_mhz, ram_total, ram_free, ram_usage, scan_id, scan_time"
        status: 400
        title: "Wazuh Error"
        type: "about:blank"

---
test_name: GET /syscollector/{agent_id}/os

includes:
  - !include common.yaml

stages:
  - type: ref
    id: login_get_token
  - name: Packages of an agent, no limit

    request:
      url: "{protocol:s}://{host:s}:{port:d}/syscollector/000/packages"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET

    response:
      status_code: 200
      body:
        totalItems: 283

  - name: Packages of and agent

    request:
      url: "{protocol:s}://{host:s}:{port:d}/syscollector/000/packages"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
      params:
        limit: 1

    response:
      status_code: 200
      body:
        items: [
          {
            architecture: !anystr,
            description: !anystr,
            format: !anystr,
            multiarch: !anystr,
            name: !anystr,
            priority: !anystr,
            scan:
              id: !anyint,
              time: !anystr,
            section: !anystr,
            size: !anyint,
            source: !anystr,
            vendor: !anystr,
            version: !anystr
          }
        ]
---