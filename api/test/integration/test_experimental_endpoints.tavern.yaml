---
test_name: GET authentication token

includes:
  - !include common.yaml

stages:
    # Authentication stage
  - type: ref
    id: login_get_token

---
test_name: DELETE /experimental/syscheck

stages:

  - name: Request

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscheck"
      method: DELETE
      headers:
        Authorization: "Bearer {test_login_token}"

    response:
      status_code: 200
      body:
        message: !anystr

---
test_name: GET /experimental/ciscat/results

stages:

  - name: Request

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/ciscat/results"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"

    response:
      status_code: 200
      body:
        data:
          totalItems: !anyint
          items: !anything

---
test_name: GET /experimental/syscollector/hardware

stages:

  - name: Request

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/hardware"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"

    response:
      status_code: 200
      body:
        data:
          totalItems: !anyint
          items: !anything

  - name: Filters -> limit=1

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/hardware"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1

    response:
      status_code: 200
      body:
        data:
          totalItems: !anyint
          items:
            - cpu:
                cores: !anyint
                mhz: !anyint
                name: !anystr
              ram:
                free: !anyint
                total: !anyint
                usage: !anyint
              scan:
                id: !anyint
                time: !anystr
              board_serial: !anystr
              agent_id: !anystr
      # Save some data for future use in the test
      save:
        body:
          ram_free: data.items.0.ram.free
          ram_total: data.items.0.ram.total
          cpu_cores: data.items.0.cpu.cores
          cpu_mhz: data.items.0.cpu.mhz
          cpu_name: data.items.0.cpu.name
          board_serial: data.items.0.board_serial

  - name: Filters -> ram_free={ram_free},select=ram_free,limit=1

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/hardware"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        ram_free: "{ram_free}"
        select: ram_free

    response:
      status_code: 200
      body:
        data:
          items:
            - ram_free: !int "{ram_free}"

  - name: Filters -> ram_free={ram_free},limit=1

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/hardware"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        ram_free: "{ram_free}"

    response:
      status_code: 200
      body:
        data:
          items:
            - ram:
                free: !int "{ram_free}"

  - name: Filters -> ram_total={ram_total},limit=1

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/hardware"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        ram_total: "{ram_total}"

    response:
      status_code: 200
      body:
        data:
          items:
            - ram:
                total: !int "{ram_total}"

  - name: Filters -> cpu_cores={cpu_cores},limit=1

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/hardware"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        cpu_cores: "{cpu_cores}"

    response:
      status_code: 200
      body:
        data:
          items:
            - cpu:
                cores: !int "{cpu_cores}"

  - name: Filters -> cpu_mhz={cpu_mhz},limit=1

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/hardware"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        cpu_mhz: "{cpu_mhz}"

    response:
      status_code: 200
      body:
        data:
          items:
            - cpu:
                mhz: !int "{cpu_mhz}"

  - name: Filters -> cpu_name={cpu_name},limit=1

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/hardware"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        cpu_name: "{cpu_name}"

    response:
      status_code: 200
      body:
        data:
          items:
            - cpu:
                name: "{cpu_name}"

  - name: Filters -> board_serial={board_serial},limit=1

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/hardware"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        board_serial: "{board_serial}"

    response:
      status_code: 200
      body:
        data:
          items:
            - board_serial: "{board_serial}"

---
test_name: GET /experimental/syscollector/netaddr

stages:

  - name: Request

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/netaddr"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"

    response:
      status_code: 200
      body:
        data:
          totalItems: !anyint
          items: !anything

  - name: Filters -> limit=1

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/netaddr"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1

    response:
      status_code: 200
      body:
        data:
          totalItems: !anyint
          items:
            - proto: !anystr
              iface: !anystr
              scan_id: !anyint
              broadcast: !anystr
              address: !anystr
              netmask: !anystr
              agent_id: !anystr
      # Save some data for future use in the test
      save:
        body:
          proto: data.items.0.proto
          address: data.items.0.address
          broadcast: data.items.0.broadcast
          netmask: data.items.0.netmask

  - name: Filters -> proto={proto},limit=1

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/netaddr"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        proto: "{proto}"

    response:
      status_code: 200
      body:
        data:
          items:
            - proto: "{proto}"

  - name: Filters -> address={address},limit=1

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/netaddr"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        address: "{address}"

    response:
      status_code: 200
      body:
        data:
          items:
            - address: "{address}"

  - name: Filters -> broadcast={broadcast},limit=1

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/netaddr"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        broadcast: "{broadcast}"

    response:
      status_code: 200
      body:
        data:
          items:
            - broadcast: "{broadcast}"

  - name: Filters -> netmask={netmask},limit=1

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/netaddr"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        netmask: "{netmask}"

    response:
      status_code: 200
      body:
        data:
          items:
            - netmask: "{netmask}"

---
test_name: GET /experimental/syscollector/netiface

stages:

  - name: Request

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/netiface"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"

    response:
      status_code: 200
      body:
        data:
          totalItems: !anyint
          items: !anything

  - name: Filters -> limit=1

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/netiface"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1

    response:
      status_code: 200
      body:
        data:
          totalItems: !anyint
          items:
            - rx:
                bytes: !anyint
                dropped: !anyint
                errors: !anyint
                packets: !anyint
              scan:
                id: !anyint
                time: !anystr
              tx:
                bytes: !anyint
                dropped: !anyint
                errors: !anyint
                packets: !anyint
              mac: !anystr
              name: !anystr
              type: !anystr
              mtu: !anyint
              state: !anystr
              agent_id: !anystr

---
test_name: GET /experimental/syscollector/netproto

stages:

  - name: Request

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/netproto"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"

    response:
      status_code: 200
      body:
        data:
          totalItems: !anyint
          items: !anything

  - name: Filters -> limit=1

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/netproto"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1

    response:
      status_code: 200
      body:
        data:
          totalItems: !anyint
          items:
            - iface:
              scan_id: !anyint
              type: !anystr
              dhcp: !anystr
              agent_id: !anystr

---
test_name: GET /experimental/syscollector/os

stages:

  - name: Request

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/os"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"

    response:
      status_code: 200
      body:
        data:
          totalItems: !anyint
          items: !anything

  - name: Filters -> limit=1

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/os"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1

    response:
      status_code: 200
      body:
        data:
          totalItems: !anyint
          items:
            - os:
                major: !anystr
                minor: !anystr
                name: !anystr
                platform: !anystr
                version: !anystr
              scan:
                id: !anyint
                time: !anystr
              release: !anystr
              architecture: !anystr
              version: !anystr
              sysname: !anystr
              hostname: !anystr
              agent_id: !anystr

---
test_name: GET /experimental/syscollector/packages

stages:

  - name: Request

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/packages"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"

    response:
      status_code: 200
      body:
        data:
          totalItems: !anyint
          items: !anything

  - name: Filters -> limit=1

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/packages"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1

    response:
      status_code: 200
      body:
        data:
          totalItems: !anyint
          items:
            - scan:
                id: !anyint
                time: !anystr
              name: !anystr
              section: !anystr
              size: !anyint
              description: !anystr
              architecture: !anystr
              vendor: !anystr
              version: !anystr
              format: !anystr
              agent_id: !anystr

---
test_name: GET /experimental/syscollector/ports

stages:

  - name: Request

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/ports"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"

    response:
      status_code: 200
      body:
        data:
          totalItems: !anyint
          items: !anything

  - name: Filters -> limit=1

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/ports"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1

    response:
      status_code: 200
      body:
        data:
          totalItems: !anyint
          items:
            - local:
                ip: !anystr
                port: !anyint
              remote:
                ip: !anystr
                port: !anyint
              scan:
                id: !anyint
                time: !anystr
              state: !anystr
              protocol: !anystr
              rx_queue: !anyint
              tx_queue: !anyint
              inode: !anyint

---
test_name: GET /experimental/syscollector/processes

stages:

  - name: Request

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/processes"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"

    response:
      status_code: 200
      body:
        data:
          totalItems: !anyint
          items: !anything

  - name: Filters -> limit=1

    request:
      url: "{protocol:s}://{host:s}:{port:d}/experimental/syscollector/processes"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1

    response:
      status_code: 200
      body:
        data:
          totalItems: !anyint
          items:
            - scan:
                id: !anyint
                time: !anystr
              fgroup: !anystr
              state: !anystr
              priority: !anyint
              suser: !anystr
              ppid: !anyint
              vm_size: !anyint
              session: !anyint
              pid: !anystr
              nlwp: !anyint
              name: !anystr
              euser: !anystr
              sgroup: !anystr
              size: !anyint
              stime: !anyint
              nice: !anyint
              share: !anyint
              processor: !anyint
              ruser: !anystr
              egroup: !anystr
              rgroup: !anystr
              pgrp: !anyint
              resident: !anyint
              utime: !anyint
              tgid: !anyint
              start_time: !anyint
              tty: !anyint
              agent_id: !anystr

